// <auto-generated />
using System;
using MatchThree.Repository.MSSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatchThree.Repository.MSSQL.Migrations
{
    [DbContext(typeof(MatchThreeDbContext))]
    [Migration("20240801194806_AddUsersReferralsCellsTabels")]
    partial class AddUsersReferralsCellsTabels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchThree.Repository.MSSQL.Models.CellDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CellType")
                        .HasColumnType("int");

                    b.Property<int>("CoordinateX")
                        .HasColumnType("int");

                    b.Property<int>("CoordinateY")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "CoordinateX", "CoordinateY")
                        .IsUnique();

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("MatchThree.Repository.MSSQL.Models.ReferralDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProducedByReferral")
                        .HasColumnType("int");

                    b.Property<long>("ReferralUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReferrerUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("WasPremium")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ReferralUserId")
                        .IsUnique();

                    b.HasIndex("ReferrerUserId", "ReferralUserId")
                        .IsUnique();

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("MatchThree.Repository.MSSQL.Models.UserDbModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LogoutAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MatchThree.Repository.MSSQL.Models.CellDbModel", b =>
                {
                    b.HasOne("MatchThree.Repository.MSSQL.Models.UserDbModel", "User")
                        .WithMany("Cells")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatchThree.Repository.MSSQL.Models.ReferralDbModel", b =>
                {
                    b.HasOne("MatchThree.Repository.MSSQL.Models.UserDbModel", "Referral")
                        .WithOne("Referrer")
                        .HasForeignKey("MatchThree.Repository.MSSQL.Models.ReferralDbModel", "ReferralUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MatchThree.Repository.MSSQL.Models.UserDbModel", "Referrer")
                        .WithMany("Referrals")
                        .HasForeignKey("ReferrerUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Referral");

                    b.Navigation("Referrer");
                });

            modelBuilder.Entity("MatchThree.Repository.MSSQL.Models.UserDbModel", b =>
                {
                    b.Navigation("Cells");

                    b.Navigation("Referrals");

                    b.Navigation("Referrer");
                });
#pragma warning restore 612, 618
        }
    }
}
